/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include "keymap_italian.h"

// Layer definitions

#define BASE 0
#define SYM 1
#define EXT 2
#define FNC 3
#define SYM2 4
#define ACCENT 5
#define SETTINGS 6

// -----------------

&sk {
    // don't release mods on other mods presses

    ignore-modifiers;
};

&lt { quick-tap-ms = <180>; };

&mt {
    quick-tap-ms = <150>;
    flavor = "tap-preferred";
};

/ {
    behaviors {
        // Enables holding the first mod-tap key
        // by performing a tap-release-hold sequence.
        // To use it: "&qt KEYCODE1 KEYCODE2"

        qt: quick_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "QUICK_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        // sometimes my device thinks a modifier is being held down
        // pressing all modifiers fixes it.

        unstick: unstick {
            label = "ZM_unstick";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
        };
    };

    combos {
        compatible = "zmk,combos";

        // both right thumb keys

        combo_accent {
            timeout-ms = <200>;
            key-positions = <32 33>;
            bindings = <&mo ACCENT>;
        };

        // internal-left & external-right thumb keys

        combo_sym2 {
            timeout-ms = <200>;
            key-positions = <31 33>;
            bindings = <&mo SYM2>;
        };

        // both left thumb keys

        combo_settings {
            timeout-ms = <200>;
            key-positions = <30 31>;
            bindings = <&mo SETTINGS>;
        };

        // left index & middle fingers (home-row)
        // hold control & space for Adobe workflow

        combo_ctrl_space {
            timeout-ms = <200>;
            key-positions = <12 13>;
            bindings = <&kp LC(SPACE)>;
            layers = <BASE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // Base alpha layer

        default_layer {
            label = "Base";
            bindings = <
&kp Q  &kp W  &kp E  &kp R        &kp T      &kp Y        &kp U       &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F        &kp G      &kp H        &kp J       &kp K      &kp L    &kp SEMI
&kp Z  &kp X  &kp C  &kp V        &kp B      &kp N        &kp M       &kp COMMA  &kp DOT  &kp SLASH
                     &lt 1 SPACE  &lt 2 TAB  &lt 1 ENTER  &lt 2 BSPC
            >;
        };

        // Numbers and high frequency symbols

        num_layer {
            label = "Num.";
            bindings = <
&kp LBKT   &kp N7  &kp N8  &kp N9  &kp RBKT   &kp HOME   &kp END    &kp INS   &kp DEL    &kp BSPC
&kp SQT    &kp N4  &kp N5  &kp N6  &kp EQUAL  &kp PLUS   &kp LEFT   &kp UP    &kp RIGHT  &kp ENTER
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp BSLH   &kp MINUS  &kp COMMA  &kp DOWN  &kp ASTRK  &kp SLASH
                           &kp N0  &kp MINUS  &trans     &trans
            >;
        };

        // Main modifiers and arrow keys

        sym_layer {
            label = "Sym.";
            bindings = <
&kp LBRC   &kp AMPS  &kp ASTRK  &kp LPAR   &kp RBRC   &mkp MCLK  &kp HOME        &kp UP          &kp END          &kp CAPS
&kp DQT    &kp DLLR  &kp PRCNT  &kp CARET  &kp PLUS   &mkp MB4   &mmv MOVE_LEFT  &mmv MOVE_UP    &mmv MOVE_RIGHT  &kp PG_UP
&kp TILDE  &kp EXCL  &kp AT     &kp HASH   &kp PIPE   &mkp MB5   &kp BSPC        &mmv MOVE_DOWN  &trans           &kp PG_DN
                                &kp RPAR   &kp UNDER  &kp ENTER  &mo FNC
            >;
        };

        // Function keys with modifiers

        fnc_layer {
            label = "FRow";
            bindings = <
&kp F1    &kp F2    &kp F3      &kp F4     &kp F5    &kp F6   &kp F7   &kp F8           &kp F9  &kp F10
&sk LALT  &sk LGUI  &sk LSHIFT  &sk LCTRL  &kp RALT  &kp F11  &kp F12  &kp PRINTSCREEN  &trans  &trans
&none     &none     &none       &none      &none     &none    &none    &none            &none   &none
                                &none      &none     &none    &none
            >;
        };

        // Low frequency symbols.

        symbols_2_layer {
            label = "Sym.2";
            bindings = <
&kp IT_CARET  &kp IT_UNDER  &kp IT_PND   &kp IT_EUR   &kp IT_HASH  &none  &none  &none  &none  &none
&kp IT_BKTK   &kp IT_TILDE  &kp IT_BSLH  &kp IT_PIPE  &kp IT_AND   &none  &none  &none  &none  &none
&none         &none         &kp IT_SECT  &kp IT_CCED  &kp IT_DEG   &none  &none  &none  &none  &none
                                         &none        &none        &none  &none
            >;
        };

        // Used to type regional accents.

        accent_layer {
            label = "Accent";
            bindings = <
&none        &none        &none        &kp IT_CEGR  &none        &none  &none  &none  &none  &none
&kp IT_AGRV  &kp IT_IGRV  &kp IT_OGRV  &kp IT_EGRV  &kp IT_EACU  &none  &none  &none  &none  &none
&none        &none        &none        &kp IT_UGRV  &none        &none  &none  &none  &none  &none
                                       &none        &none        &none  &none
            >;
        };

        // Used to change the keyboard's settings.

        settings_layer {
            label = "Sett.";
            bindings = <
&bootloader     &none  &none  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 3  &none  &unstick  &none  &bootloader
&none           &none  &none  &none       &bt BT_SEL 1  &bt BT_SEL 4  &none  &none     &none  &none
&studio_unlock  &none  &none  &none       &bt BT_SEL 2  &bt BT_SEL 5  &none  &none     &none  &studio_unlock
                              &none       &none         &none         &none
            >;
        };
    };
};
